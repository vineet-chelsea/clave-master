// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL || 'http://127.0.0.1:54321';
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_PUBLISHABLE_KEY || 'demo-key';

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
  }
});

// API endpoint for sensor readings from PostgreSQL
// In production (Docker), this will be set by VITE_API_BASE_URL environment variable
// Defaults to localhost for local development
export const API_BASE_URL = import.meta.env.VITE_API_BASE_URL || 'http://localhost:5000';
export const API_URL = `${API_BASE_URL}/api`;

// Helper function to get latest sensor reading
export async function getLatestSensorReading() {
  try {
    const response = await fetch(`${API_URL}/sensor-readings/latest`);
    if (!response.ok) throw new Error('Failed to fetch');
    return await response.json();
  } catch (error) {
    console.error('Error fetching sensor reading:', error);
    return { pressure: 0, temperature: 25, timestamp: null };
  }
}